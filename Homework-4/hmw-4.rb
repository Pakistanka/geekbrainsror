require 'open-uri'
require 'openssl'
require 'open_uri_redirections'
require 'nokogiri'
require 'date'
require 'net/http'
#require 'uri'
require_relative 'lib/links_file.rb'

puts'Введите интересующий интернет-рессурс в формате example.com или www.example.com:'
link_file=Links_File.new(gets.chomp)
link_file.collection_of_links
puts 'Вывести содержимое файла c cылками?(1-да, 2-нет):'
case gets.chomp
when '1'
  link_file.output_selected_links
else
  exit
end

# Требования к программе:
#
#    Язык написания ruby > 2.2 версии
#    Среда экслпуатации - консоль bash.
#    Коммуникация с пользователем в интерактивном режиме (вопрос - ответ; вопрос - ответ);
#    Необходимые зависимости все добавляем через Gemfile.
#    Для своих библиотек помощников - своя папка lib.
#    План программы в Readme.md
#    Ключевой функционал должен быть покрыт тестами.
#
# Сценарий проверки корректности работы.
#
#    Принимаю pull-request
#    Читаю план программы и пониманю как ей пользоваться.
#    Устанавливаю ваши зависимости.
#    Запускаю и проверяю сценарий работы.
#    Запускаю тесты.
#
# Комментарии и рекоммендации что может помочь.
#
#    Узнать что такое Gemfile и Bundler.
#    Для интеракитва может помочь команда gets
#    Парсить сайт можно библиотекой nokogiri
#    Помним что один класс - это один пердставитель осмысленой сущности которая что-то может делать примерно одним, максимум двумя публичными методами.
#    Тестировать стандартной библиотекой в составе ruby.
#
# Помощь в выполнении работы
#
#    Формат задвания вопроса:
#    1. Пункт задания
#    2. Выполненные действия
#    3. Что получилось (не так)
#    4. Что хотелось получить в виде результата на проделанные действия.
#
#    Работа не сложная, выполнимая за вечерок.
#    Если вы не задаете вопросы в указанном формате - я понимаю что вы успешно справляетесь с заданием или же так же успешно на него подзабили.
#    Сдавать задание в виде файла, внутри которого написано: домашнее задание [ссылка на пулреквест].
